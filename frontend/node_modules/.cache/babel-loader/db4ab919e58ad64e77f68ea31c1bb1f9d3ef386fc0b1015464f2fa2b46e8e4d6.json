{"ast":null,"code":"var _jsxFileName = \"/root/test_AI_Stream_True/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [prompt, setPrompt] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!prompt) return;\n    try {\n      const res = await fetch(\"http://localhost:5002/generate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt\n        })\n      });\n\n      // Initialize an empty response string\n      let responseText = \"\";\n\n      // Read the stream of chunks\n      const reader = res.body.getReader();\n      const decoder = new TextDecoder();\n      const stream = new ReadableStream({\n        start(controller) {\n          const pump = async () => {\n            const {\n              done,\n              value\n            } = await reader.read();\n            if (done) {\n              controller.close();\n              return;\n            }\n            // Append the chunk to the response text\n            responseText += decoder.decode(value, {\n              stream: true\n            });\n            setResponse(responseText); // Update response as chunks arrive\n            pump();\n          };\n          pump();\n        }\n      });\n\n      // Consume the stream\n      await new Response(stream).text();\n\n      // Optionally, update history or handle the response\n      setHistory([...history, {\n        prompt,\n        response: responseText\n      }]);\n    } catch (err) {\n      console.error(\"Error generating content:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AI Content Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter your prompt here...\",\n        value: prompt,\n        onChange: e => setPrompt(e.target.value),\n        rows: \"4\",\n        cols: \"50\",\n        style: {\n          display: \"block\",\n          marginBottom: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Response\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: history.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Prompt:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), \" \", entry.prompt, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 53\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Response:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), \" \", entry.response]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rebqjwlZd2XIi9gIhgXdQJjxEPA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","prompt","setPrompt","response","setResponse","history","setHistory","handleSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","responseText","reader","getReader","decoder","TextDecoder","stream","ReadableStream","start","controller","pump","done","value","read","close","decode","Response","text","err","console","error","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","target","rows","cols","display","marginBottom","type","map","entry","index","_c","$RefreshReg$"],"sources":["/root/test_AI_Stream_True/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction App() {\n  const [prompt, setPrompt] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [history, setHistory] = useState([]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!prompt) return;\n\n    try {\n      const res = await fetch(\"http://localhost:5002/generate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ prompt }),\n      });\n\n      // Initialize an empty response string\n      let responseText = \"\";\n\n      // Read the stream of chunks\n      const reader = res.body.getReader();\n      const decoder = new TextDecoder();\n      const stream = new ReadableStream({\n        start(controller) {\n          const pump = async () => {\n            const { done, value } = await reader.read();\n            if (done) {\n              controller.close();\n              return;\n            }\n            // Append the chunk to the response text\n            responseText += decoder.decode(value, { stream: true });\n            setResponse(responseText);  // Update response as chunks arrive\n            pump();\n          };\n          pump();\n        },\n      });\n\n      // Consume the stream\n      await new Response(stream).text();\n\n      // Optionally, update history or handle the response\n      setHistory([...history, { prompt, response: responseText }]);\n    } catch (err) {\n      console.error(\"Error generating content:\", err);\n    }\n  };\n\n  return (\n    <div style={{ padding: \"20px\" }}>\n      <h1>AI Content Generator</h1>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          placeholder=\"Enter your prompt here...\"\n          value={prompt}\n          onChange={(e) => setPrompt(e.target.value)}\n          rows=\"4\"\n          cols=\"50\"\n          style={{ display: \"block\", marginBottom: \"10px\" }}\n        />\n        <button type=\"submit\">Generate</button>\n      </form>\n      <h2>Response</h2>\n      <p>{response}</p>\n      <h2>History</h2>\n      <ul>\n        {history.map((entry, index) => (\n          <li key={index}>\n            <strong>Prompt:</strong> {entry.prompt} <br />\n            <strong>Response:</strong> {entry.response}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}